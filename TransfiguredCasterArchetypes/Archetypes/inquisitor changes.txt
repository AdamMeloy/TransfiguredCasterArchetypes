Holy Book
At 1st level, a living grimoire forms a supernatural bond with a large ironbound tome containing the holy text of his deity and learns to use it as a weapon.
When wielding the holy book as a weapon, he deals base damage as if it were a cold iron light mace (but see Sacred Word),
is considered proficient with the book, and gains a +1 bonus on attack rolls with the book.
The tome serves as his holy symbol and divine focus, and can be enchanted as a magic weapon.

He can replace his bonded tome with another book at any time, though he must perform a 24-hour binding ritual to attune himself to the new book.


Sacred Word


At 4th level, the living grimoire gains the ability to enhance his holy book with divine power as a swift action.
This ability grants the holy book a +1 enhancement bonus.
For every 4 inquisitor levels the living grimoire has beyond 4th, this bonus increases by 1 (to a maximum of +5 at 20th level).

These bonuses stack with any existing bonuses the holy book might have, to a maximum of +5.
The living grimoire can enhance his holy book to have any of the special abilities listed in the warpriest’s sacred weapon ability,
subject to the same alignment restrictions, but adds bane to the general special ability list.
Adding any of these special abilities to the holy book consumes an amount of enhancement bonus equal to the special ability’s base price modifier.
The holy book must have at least a +1 enhancement bonus before the living grimoire can add any special abilities to it.
The living grimoire can use this ability a number of rounds per day equal to his inquisitor level, but these rounds don’t need to be consecutive.
As with the warpriest sacred weapon ability, he determines the enhancement bonus and special abilities the first time he uses the ability each day, and they cannot be changed until the next day.


Blessed Script
At 5th level, a living grimoire can permanently tattoo one spell of 2nd level or lower from his holy book onto his body.
The tattooed spell cannot have an expensive material component or focus.
The living grimoire can prepare any tattooed spell without needing his holy book, and can cast his tattooed spells as a spell-like ability once per day.

At 8th level, the living grimoire can tattoo one additional spell of 3rd level or lower upon himself.
At 12th level, he can tattoo one additional spell of 4th level or lower upon himself, and at 16th level he can tattoo a final additional spell of any level upon himself.

When the living grimoire uses these spell-like abilities, the tattooed holy script associated with the spell-like ability glows as per light for a number of rounds equal to the spell’s level.


Word of God
At 20th level, a living grimoire can smite his foes with the holy word of his deity.
Up to seven times per day, the inquisitor can make a single melee attack with his holy book against a target.
If the attack hits, it deals damage normally and the target must succeed at a Fortitude save or die (DC = 10 + 1/2 the living grimoire’s inquisitor level + his Intelligence modifier).
Regardless of whether the save is successful, the target creature is immune to the living grimoire’s word of god ability for 24 hours.
Once the living grimoire uses this ability, he can’t use it again for 1d4 rounds.


Sacred Weapon
Table: Sacred Weapon Damage
Level		Small	Medium	Large
1st-4th		1d4	1d6	1d8
5th-9th		1d6	1d8	2d6
10th-14th	1d8	1d10	2d8
15th-19th	1d10	2d6	3d6
20th		2d6	2d8	3d8
At 1st level, a living grimoire learns to charge his holy book with the power of his faith.
The inquisitor gains the benefits of the warpriest’s sacred weapon class ability, but the benefits apply only to his bonded holy book.
Like a warpriest’s sacred weapon, the living grimoire’s book deals damage based on the inquisitor’s level,
not the book’s base damage (unless the inquisitor chooses to use the book’s base damage).


Sacred Weapon +X
At 4th level, the inquisitor gains the ability to enhance his holy book with divine power as a swift action.
This power grants the holy book a +1 enhancement bonus. For every 4 levels beyond 4th, this bonus increases by 1 (to a maximum of +5 at 20th level).
The inquisitor can use this ability a number of rounds per day equal to his inquisitor level, but these rounds need not be consecutive.

These bonuses stack with any existing bonuses the holy book might have, to a maximum of +5.
The inquisitor can enhance his holy book with any of the following weapon special abilities:
brilliant energy, flaming, frost, keen, shock, and bane.
In addition, if the inquisitor is chaotic, he can add anarchic and vicious.
If he is evil, he can add mighty cleaving and unholy.
If he is good, he can add ghost touch and holy.
If he is lawful, he can add axiomatic and merciful.
If he is neutral (with no other alignment components), he can add spell storing and thundering.
Adding any of these special abilities replaces an amount of bonus equal to the special ability’s base cost.
Duplicate abilities do not stack. The holy book must have at least a +1 enhancement bonus before any other special abilities can be added.




// Mystic Theurge Support
            var mtLGL = FeatureConfigurator.New(LivingGrimoireMysticTheurgeLevelUp, Guids.LivingGrimoireMysticTheurgeLevelUp)
                .AddSpellbookLevel(spellbook)
                .SetDisplayName(ArchetypeDisplayName)
                .SetDescription(LivingGrimoireMysticTheurgeDescription)
                .SetHideInUI(true)
                .SetHideInCharacterSheetAndLevelUp(false)
                .SetHideNotAvailibleInUI(false)
                .SetRanks(10)
                .SetReapplyOnLevelUp(false)
                .SetIsClassFeature(true)
                .Configure();
            var mtLGLS = mtLGL.ToString();

            var mtLGB = ProgressionConfigurator.New(LivingGrimoireMysticTheurgeProgressionBase, Guids.LivingGrimoireMysticTheurgeProgressionBase)
                .AddPrerequisiteClassSpellLevel(characterClass: CharacterClassRefs.InquisitorClass.ToString(), requiredSpellLevel: 2)
                .AddMysticTheurgeSpellbook(characterClass: CharacterClassRefs.InquisitorClass.ToString(), mysticTheurge: CharacterClassRefs.MysticTheurgeClass.ToString())
                .SetDisplayName(ArchetypeDisplayName)
                .SetDescription(LivingGrimoireMysticTheurgeDescription)
                .SetHideInUI(true)
                .SetHideInCharacterSheetAndLevelUp(false)
                .SetHideNotAvailibleInUI(true)
                .SetGroups(FeatureGroup.MysticTheurgeDivineSpellbook)
                .SetRanks(1)
                .SetReapplyOnLevelUp(false)
                .SetIsClassFeature(true)
                .SetClasses( (CharacterClassRefs.MysticTheurgeClass.ToString(), 0), (CharacterClassRefs.InquisitorClass.ToString(), 0))
                .SetArchetypes(Guids.LivingGrimoireArchetype.ToString())
                .SetForAllOtherClasses(false)
                //.SetAlternateProgressionClasses() no
                .SetLevelEntries(
                    LevelEntryBuilder.New()
                        .AddEntry(5, mtLGLS)
                        .AddEntry(6, mtLGLS)
                        .AddEntry(7, mtLGLS)
                        .AddEntry(8, mtLGLS)
                        .AddEntry(9, mtLGLS)
                        .AddEntry(10, mtLGLS)
                        .AddEntry(11, mtLGLS)
                        .AddEntry(12, mtLGLS)
                        .AddEntry(13, mtLGLS)
                        .AddEntry(14, mtLGLS)
                        .AddEntry(15, mtLGLS)
                        .AddEntry(16, mtLGLS)
                        .AddEntry(17, mtLGLS)
                        .AddEntry(18, mtLGLS)
                        .AddEntry(19, mtLGLS)
                        .AddEntry(20, mtLGLS)
                )
                .SetExclusiveProgression(CharacterClassRefs.MysticTheurgeClass.ToString())
                .SetGiveFeaturesForPreviousLevels(false)
                .Configure();

            // Hellknight Signifer Support
            var hsLGL = FeatureConfigurator.New(LivingGrimoireHellknightSignifierLevelUp, Guids.LivingGrimoireHellknightSignifierLevelUp)
                .AddSpellbookLevel(spellbook)
                .SetDisplayName(ArchetypeDisplayName)
                .SetDescription(LivingGrimoireHellknightSignifierDescription)
                .SetHideInUI(true)
                .SetHideInCharacterSheetAndLevelUp(false)
                .SetHideNotAvailibleInUI(false)
                .SetRanks(10)
                .SetReapplyOnLevelUp(false)
                .SetIsClassFeature(true)
            .Configure();
            var hsLGLS = hsLGL.ToString();

            var hsLGB = FeatureReplaceSpellbookConfigurator.New(LivingGrimoireHellknightSignifierProgressionBase, Guids.LivingGrimoireHellknightSignifierProgressionBase)
                .AddPrerequisiteClassSpellLevel(characterClass: CharacterClassRefs.InquisitorClass.ToString(), requiredSpellLevel: 3)
                .SetDisplayName(ArchetypeDisplayName)
                .SetDescription(LivingGrimoireHellknightSignifierDescription)
                .SetHideInUI(true)
                .SetHideInCharacterSheetAndLevelUp(true)
                .SetHideNotAvailibleInUI(true)
                .SetGroups(FeatureGroup.HellknightSigniferSpellbook)
                .SetRanks(1)
                .SetReapplyOnLevelUp(false)
                .SetIsClassFeature(true)
                .SetClasses((CharacterClassRefs.HellknightSigniferClass.ToString(), 0), (CharacterClassRefs.InquisitorClass.ToString(), 0))
                .SetArchetypes(Guids.LivingGrimoireArchetype.ToString())
                .SetForAllOtherClasses(false)
                //.SetAlternateProgressionClasses() no
                .SetLevelEntries(
                    LevelEntryBuilder.New()
                        .AddEntry(5, hsLGLS)
                        .AddEntry(6, hsLGLS)
                        .AddEntry(7, hsLGLS)
                        .AddEntry(8, hsLGLS)
                        .AddEntry(9, hsLGLS)
                        .AddEntry(10, hsLGLS)
                        .AddEntry(11, hsLGLS)
                        .AddEntry(12, hsLGLS)
                        .AddEntry(13, hsLGLS)
                        .AddEntry(14, hsLGLS)
                        .AddEntry(15, hsLGLS)
                        .AddEntry(16, hsLGLS)
                        .AddEntry(17, hsLGLS)
                        .AddEntry(18, hsLGLS)
                        .AddEntry(19, hsLGLS)
                        .AddEntry(20, hsLGLS)
                )
                .SetExclusiveProgression(CharacterClassRefs.HellknightSigniferClass.ToString())
                .SetGiveFeaturesForPreviousLevels(false)
                .Configure();

            // Loremaster Support
            var lmLGL = FeatureConfigurator.New(LivingGrimoireLoremasterLevelUp, Guids.LivingGrimoireLoremasterLevelUp)
                .AddSpellbookLevel(spellbook)
                .SetDisplayName(ArchetypeDisplayName)
                .SetDescription(LivingGrimoireLoremasterDescription)
                .SetHideInUI(true)
                .SetHideInCharacterSheetAndLevelUp(false)
                .SetHideNotAvailibleInUI(false)
                .SetRanks(10)
                .SetReapplyOnLevelUp(false)
                .SetIsClassFeature(true)
            .Configure();
            var lmLGLS = lmLGL.ToString();

            var lmLGB = ProgressionConfigurator.New(LivingGrimoireLoremasterProgressionBase, Guids.LivingGrimoireLoremasterProgressionBase)
                .AddPrerequisiteClassSpellLevel(characterClass: CharacterClassRefs.InquisitorClass.ToString(), requiredSpellLevel: 3)
                .SetDisplayName(ArchetypeDisplayName)
                .SetDescription(LivingGrimoireLoremasterDescription)
                .SetHideInUI(true)
                .SetHideInCharacterSheetAndLevelUp(true)
                .SetHideNotAvailibleInUI(true)
                .SetGroups(FeatureGroup.ReplaceSpellbook)
                .SetRanks(1)
                .SetReapplyOnLevelUp(false)
                .SetIsClassFeature(true)
                .SetClasses((CharacterClassRefs.LoremasterClass.ToString(), 0), (CharacterClassRefs.InquisitorClass.ToString(), 0))
                .SetArchetypes(Guids.LivingGrimoireArchetype.ToString())
                .SetForAllOtherClasses(false)
                //.SetAlternateProgressionClasses() no
                .SetLevelEntries(
                    LevelEntryBuilder.New()
                        .AddEntry(2, lmLGLS)
                        .AddEntry(3, lmLGLS)
                        .AddEntry(4, lmLGLS)
                        .AddEntry(5, lmLGLS)
                        .AddEntry(6, lmLGLS)
                        .AddEntry(7, lmLGLS)
                        .AddEntry(8, lmLGLS)
                        .AddEntry(9, lmLGLS)
                        .AddEntry(10, lmLGLS)
                        .AddEntry(11, lmLGLS)
                        .AddEntry(12, lmLGLS)
                        .AddEntry(13, lmLGLS)
                        .AddEntry(14, lmLGLS)
                        .AddEntry(15, lmLGLS)
                        .AddEntry(16, lmLGLS)
                        .AddEntry(17, lmLGLS)
                        .AddEntry(18, lmLGLS)
                        .AddEntry(19, lmLGLS)
                        .AddEntry(20, lmLGLS)
                )
                .SetExclusiveProgression(CharacterClassRefs.LoremasterClass.ToString())
                .SetGiveFeaturesForPreviousLevels(false)
                .Configure();

            Logger.Log("Adding Archetype Spellbook for Mystic Theurge");
            Common.ConfigureArchetypeProgressionReplacement
            (
                characterClass: inquisitor,
                archetype: Guids.LivingGrimoireArchetype,
                baseReplacement: ProgressionRefs.MysticTheurgeInquisitorProgression.ToString(),
                sourceReplacement: mtLGB.ToString(),
                replacementName: LivingGrimoireMysticTheurge,
                replacementGuid: Guids.LivingGrimoireMysticTheurgeProgression,
                replacementSelection: FeatureSelectionRefs.MysticTheurgeDivineSpellbookSelection.ToString()
            );

            Logger.Log("Adding Archetype Spellbook for Hellknight Signifer");
            Common.ConfigureArchetypeProgressionReplacement
            (
                characterClass: inquisitor,
                archetype: Guids.LivingGrimoireArchetype,
                baseReplacement: ProgressionRefs.HellknightSigniferInquisitorProgression.ToString(),
                sourceReplacement: hsLGB.ToString(),
                replacementName: LivingGrimoireHellknightSignifier,
                replacementGuid: Guids.LivingGrimoireHellknightSignifierProgression,
                replacementSelection: FeatureSelectionRefs.HellknightSigniferSpellbook.ToString()
            );

            Logger.Log("Adding Archetype Spellbook for Loremaster");
            Common.ConfigureArchetypeProgressionReplacement
            (
                characterClass: inquisitor,
                archetype: Guids.LivingGrimoireArchetype,
                baseReplacement: ProgressionRefs.LoremasterInquisitorProgression.ToString(),
                sourceReplacement: lmLGB.ToString(),
                replacementName: LivingGrimoireLoremaster,
                replacementGuid: Guids.LivingGrimoireLoremasterProgression,
                replacementSelection: FeatureSelectionRefs.LoremasterSpellbookSelection.ToString()
            );
            Common.AddToLoremasterSecrets
            (
                Guids.LivingGrimoireLoremasterProgression,
                ParametrizedFeatureRefs.LoremasterClericSecretInquisitor.ToString(),
                ParametrizedFeatureRefs.LoremasterDruidSecretInquisitor.ToString(),
                ParametrizedFeatureRefs.LoremasterWizardSecretInquisitor.ToString()
            );
